version: '3.1'

services:

  proxy:
    container_name: logus-proxy-container
    #image: nginx:latest
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    links:
      - appweb
    depends_on:
      - appweb

  appweb:
    container_name: logus-appweb-container
    build: .

    # Utilizando Gunicorn
    command: bash -c 'python manage.py collectstatic --noinput && gunicorn logusweb.wsgi -b 0.0.0.0:8000 -w 3' # Modo Producao (S/ Reload)
    #command: bash -c 'python manage.py collectstatic --noinput && gunicorn logusweb.wsgi -b 0.0.0.0:8000 -w 3 --reload' # Modo Desenvolvimento

    # Sem Gunicorn
    #command: bash -c 'python manage.py makemigrations --noinput && python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000 --insecure'
    
    volumes:
      - ./codigo:/code
    expose:
      - "8000"
    links:
      - db
    depends_on:
      - db

  db:
    container_name: logus-db-container
    #image: postgres
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: example
      PGDATA: /dados
    volumes:
      - pg_data:/dados

volumes:
  pg_data:
